{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AppComponent = class AppComponent {\n  constructor(http) {\n    this.value = true;\n    this.users = [];\n    this.soldi = 2;\n    setTimeout(() => {\n      http.get('https://jsonplaceholder.typicode.com/users').subscribe(result => this.users = result);\n      this.value = false;\n    }, 2500);\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  template: `\n  <h1 *ngIf=\"value\">Loading... #waititaminut#</h1>\n  <li *ngFor=\" let user of users\">\n    <pre>{{user.name | json}} - {{}}</pre>\n</li>\n  `,\n  styles: []\n})], AppComponent);","map":{"version":3,"names":["Component","AppComponent","constructor","http","value","users","soldi","setTimeout","get","subscribe","result","__decorate","selector","template","styles"],"sources":["/home/nunzio03/myApp/src/app/app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from './model/user';\n\n@Component({\n  selector: 'app-root',\n  template: `\n  <h1 *ngIf=\"value\">Loading... #waititaminut#</h1>\n  <li *ngFor=\" let user of users\">\n    <pre>{{user.name | json}} - {{}}</pre>\n</li>\n  `,\n  styles: []\n})\nexport class AppComponent {\n  value: boolean = true;\n  users: User[] = [];\n  soldi: number = 2;\n\n  constructor(http: HttpClient){\n    setTimeout(() => {\n      http.get<User[]>('https://jsonplaceholder.typicode.com/users')\n      .subscribe((result: User[]) => this.users = result)\n      this.value = false;\n    }, 2500);\n    \n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAclC,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAKvBC,YAAYC,IAAgB;IAJ5B,KAAAC,KAAK,GAAY,IAAI;IACrB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,KAAK,GAAW,CAAC;IAGfC,UAAU,CAAC,MAAK;MACdJ,IAAI,CAACK,GAAG,CAAS,4CAA4C,CAAC,CAC7DC,SAAS,CAAEC,MAAc,IAAK,IAAI,CAACL,KAAK,GAAGK,MAAM,CAAC;MACnD,IAAI,CAACN,KAAK,GAAG,KAAK;IACpB,CAAC,EAAE,IAAI,CAAC;EAEV;CAED;AAdYH,YAAY,GAAAU,UAAA,EAVxBX,SAAS,CAAC;EACTY,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE;;;;;GAKT;EACDC,MAAM,EAAE;CACT,CAAC,C,EACWb,YAAY,CAcxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}